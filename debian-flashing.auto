uuu_version 1.2.39

# @_flash.bin            | bootloader, which can extract from wic image
# @_image   [_flash.bin] | wic image burn to emmc.

#---------------------------------------------------------------------------------

SDP: boot -f _flash.bin -scanlimited 0x800000

SDPV: delay 1000

SDPV: write -f _flash.bin -skipspl -scanterm -scanlimited 0x800000

SDPV: jump -scanlimited 0x800000

#---------------------------------------------------------------------------------

FB: ucmd setenv fastboot_dev mmc
FB: ucmd setenv mmcdev ${emmc_dev}
FB: ucmd mmc dev ${emmc_dev}

FB: flash -scanterm -scanlimited 0x800000 bootloader _flash.bin
FB: ucmd if env exists emmc_ack; then ; else setenv emmc_ack 0; fi;
FB: ucmd mmc partconf ${emmc_dev} ${emmc_ack} 1 0

#---------------------------------------------------------------------------------

FB: ucmd setenv fastboot_buffer ${loadaddr}
FB: download -f Image 
FB: ucmd setenv fastboot_buffer ${fdt_addr}

#FB: download -f comet-fs/imx8mm-mecha-comet-m-gen1.dtb

# FB: download -f imx8mm-mecha-som-gen1-ramfs.dtb
# FB: ucmd setenv fdtfile imx8mm-mecha-som-gen1-ramfs.dtb

FB: download -f imx8mm-mecha-comet-m-gen1.dtb
FB: ucmd setenv fdtfile imx8mm-mecha-comet-m-gen1.dtb

FB: ucmd printenv fdtfile 
FB: ucmd setenv fastboot_buffer ${initrd_addr}

# Download ramfs image to RAM
FB: download -f mecha-image-mfgtool-initramfs-mecha-comet-m-gen1-20240702102938.rootfs.cpio.gz.u-boot

FB: ucmd setenv mfgtool_args ${mfgtool_args} mfg_mmcdev=${emmc_dev}
FB: ucmd run mfgtool_args
FB: ucmd setenv bootargs root=/dev/ram0 rdinit=/linuxrc rw
FB: ucmd printenv fdtfile
#FB: ucmd printenv

FB: acmd booti ${loadaddr} ${initrd_addr} ${fdt_addr}

FBK: ucmd sleep 3

# get mmc dev number from kernel command line
FBK: ucmd cmdline=`cat /proc/cmdline`;cmdline=${cmdline#*mfg_mmcdev=};cmds=($cmdline);echo ${cmds[0]}>/tmp/mmcdev
FBK: ucmd sleep 1

# Wait for mmc
FBK: ucmd mmc=`cat /tmp/mmcdev`; while [ ! -e /dev/mmcblk2 ]; do sleep 1; echo "wait for /dev/mmcblk2 appear"; done;
FBK: ucmd sleep 1

### Clear all Partitions 
# FBK: ucmd sfdisk -f --delete /dev/mmcblk2
FBK: ucmd parted /dev/mmcblk2 --script mklabel msdos

FBK: ucmd lsblk


# FAT16 BOOT partition
FBK: ucmd parted /dev/mmcblk2 -- mkpart primary FAT16 10MB 195MB
FBK: ucmd mkfs.vfat /dev/mmcblk2p1

FBK: ucmd parted /dev/mmcblk2 -- mkpart primary ext4 205MB 10000MB
FBK: ucmd mkfs.ext4 /dev/mmcblk2p2

FBK: ucmd parted /dev/mmcblk2 -- mkpart primary ext4 10005MB 29000MB
FBK: ucmd mkfs.ext4 /dev/mmcblk2p3


# ROOT PARTITION ----------------------------
FBK: ucmd mmc=`cat /tmp/mmcdev`; mkdir -p /mnt
FBK: ucmd mmc=`cat /tmp/mmcdev`; mount -t ext4 /dev/mmcblk2p2 /mnt


# BOOT PARTITION --------------------------
FBK: ucmd mmc=`cat /tmp/mmcdev`; mkdir -p /mnt/boot
FBK: ucmd mmc=`cat /tmp/mmcdev`; mount -t vfat /dev/mmcblk2p1 /mnt/boot


# HOME PARTITION ---------------------------
FBK: ucmd mmc=`cat /tmp/mmcdev`; mkdir -p /mnt/home
FBK: ucmd mmc=`cat /tmp/mmcdev`; mount -t ext4 /dev/mmcblk2p3 /mnt/home



# Extract _rootfs.tar.bz2
FBK: acmd export EXTRACT_UNSAFE_SYMLINKS=1; tar -z -x -C /mnt

# Download image-core to root partition
FBK: ucp _image t:- /mnt

# FBK: ucp debian-image-inited.tar.gz t:- /mnt

# Create symlink to kernel image (TODO: replace with full kernel name in args)
# FBK: ucmd cp /mnt/boot/Image* /mnt/boot/Image

FBK: ucmd sleep 45

FBK: ucmd sync
FBK: DONE






